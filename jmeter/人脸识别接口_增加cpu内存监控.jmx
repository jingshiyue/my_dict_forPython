<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="http-25个线程,陌生人识别" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1591606083000</longProp>
        <longProp name="ThreadGroup.end_time">1591606083000</longProp>
        <stringProp name="TestPlan.comments">查看接口响应速度</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="faceImg" elementType="Argument">
              <stringProp name="Argument.name">faceImg</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">D:\pre_data\old_feature\picture\282.jpg</stringProp>
            </elementProp>
            <elementProp name="faceFeature_2k" elementType="Argument">
              <stringProp name="Argument.name">faceFeature_2k</stringProp>
              <stringProp name="Argument.value">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</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">D:\pre_data\old_feature\picture2k\282.txt</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apiId</stringProp>
              <stringProp name="Header.value">123456</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sign</stringProp>
              <stringProp name="Header.value">d6b230353e4d40bf539c81cfec2a6618</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">timestamp</stringProp>
              <stringProp name="Header.value">1578990044640</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求-陌生人识别" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{	&quot;reqId&quot;: &quot;1aa9eb7e36a611ea9aaff8da0c04b92c&quot;,&#xd;
	&quot;areaCode&quot;: &quot;T111&quot;, &#xd;
	&quot;deviceCode&quot;: &quot;zhuapai1&quot;, &#xd;
	&quot;deviceType&quot;: &quot;0&quot;, &#xd;
	&quot;deviceName&quot;: &quot;抓拍服务器1&quot;, &#xd;
	&quot;captureCode&quot;: &quot;zhuapai1&quot;, &#xd;
	&quot;imageInfo&quot;: [{&quot;faceImg&quot;:&quot;${faceImg}&quot; , &#xd;
				&quot;faceFeature&quot;: &quot;${faceFeature_2k}&quot;,&#xd;
				&quot;fId&quot;: &quot;123213&quot;, &#xd;
				&quot;qualityScore&quot;: 95}&#xd;
				]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.18.2.128</stringProp>
          <stringProp name="HTTPSampler.port">9091</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTP</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/face-bussiness-server/api/v1/face/review/check</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-472900636">status&quot;:0,&quot;msg&quot;:&quot;Success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">1000</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">1000</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
            <collectionProp name="metricConnections">
              <collectionProp name="677991914">
                <stringProp name="-1768763178">172.18.2.128</stringProp>
                <stringProp name="1600768">4444</stringProp>
                <stringProp name="66952">CPU</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <collectionProp name="-1622722407">
                <stringProp name="-1768763178">172.18.2.128</stringProp>
                <stringProp name="1600768">4444</stringProp>
                <stringProp name="-1993889503">Memory</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
            </collectionProp>
          </kg.apc.jmeter.perfmon.PerfMonCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="-1977292427">&quot;userInfo&quot;:[]</stringProp>
            <stringProp name="-161783868">&quot;status&quot;:0</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">16</intProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
